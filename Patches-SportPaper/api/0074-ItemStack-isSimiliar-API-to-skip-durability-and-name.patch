From a15a61afbf319de831d024bf9bbd965797a53cfc Mon Sep 17 00:00:00 2001
From: cswhite2000 <18whitechristop@gmail.com>
Date: Sat, 25 Aug 2018 00:34:35 -0700
Subject: [PATCH] ItemStack isSimiliar API to skip durability and name checks

Skip Durability is useful if you simply want to see if an item type is the same for weapons
Skip Item Name is useful if you want to treat a renamed item the same as an unrenamed item, when lore is involved

For example, lore can be used to identify a custom item, but then if a player renames it, the isSimilar breaks.

This new boolean allows you to verify if the item is the same ignoring the name field by temporarily nulling it during the check.

diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index 43f8d146..1954ea71 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -331,13 +331,75 @@ public class ItemStack implements Cloneable, ConfigurationSerializable {
      */
     @Utility
     public boolean isSimilar(ItemStack stack) {
+        return isSimilar(stack, false);
+    }
+
+    /**
+     * This method is the same as equals, but does not consider stack size
+     * (amount).
+     *
+     * @param stack the item stack to compare to
+     * @param skipDur Ignore differences in durability
+     * @return true if the two stacks are equal, ignoring the amount, and optionally durability
+     */
+    @Utility
+    public boolean isSimilar(ItemStack stack, boolean skipDur) {
+        return isSimilar(stack, skipDur, false);
+    }
+
+    /**
+     * This method is the same as equals, but does not consider stack size
+     * (amount).
+     *
+     * @param stack the item stack to compare to
+     * @param skipDur Ignore differences in durability
+     * @param skipCheckingName Ignore differences in display name
+     * @return true if the two stacks are equal, ignoring the amount, and optionally durability/name
+     */
+    @Utility
+    public boolean isSimilar(ItemStack stack, boolean skipDur, boolean skipCheckingName) {
         if (stack == null) {
             return false;
         }
         if (stack == this) {
             return true;
         }
-        return getTypeId() == stack.getTypeId() && getDurability() == stack.getDurability() && hasItemMeta() == stack.hasItemMeta() && (hasItemMeta() ? Bukkit.getItemFactory().equals(getItemMeta(), stack.getItemMeta()) : true);
+        if (getTypeId() != stack.getTypeId() || (!skipDur && getDurability() != stack.getDurability())) {
+            return false;
+        }
+        final boolean hasMeta1 = hasItemMeta();
+        final boolean hasMeta2 = stack.hasItemMeta();
+        if (!hasMeta1 && !hasMeta2) {
+            return true;
+        }
+
+        final ItemMeta meta1 = hasMeta1 ? getItemMeta() : null;
+        final ItemMeta meta2 = hasMeta2 ? stack.getItemMeta() : null;
+
+        final String prevName1 = meta1 != null ? meta1.getDisplayName() : null;
+        final String prevName2 = meta2 != null ? meta2.getDisplayName() : null;
+        if (skipCheckingName) {
+            if (meta1 != null) {
+                meta1.setDisplayName(null);
+            }
+            if (meta2 != null) {
+                meta2.setDisplayName(null);
+            }
+        }
+
+        try {
+            return Bukkit.getItemFactory().equals(meta1, meta2);
+        } finally {
+            if (skipCheckingName) {
+                if (meta1 != null) {
+                    meta1.setDisplayName(prevName1);
+                }
+                if (meta2 != null) {
+                    meta2.setDisplayName(prevName2);
+                }
+            }
+        }
+        // Paper end
     }
 
     @Override
-- 
2.18.0

