--- a/net/minecraft/world/storage/loot/LootTableManager.java
+++ b/net/minecraft/world/storage/loot/LootTableManager.java
@@ -23,6 +23,7 @@
    private static final Logger field_186525_a = LogManager.getLogger();
    private static final Gson field_186526_b = (new GsonBuilder()).registerTypeAdapter(RandomValueRange.class, new RandomValueRange.Serializer()).registerTypeAdapter(BinomialRange.class, new BinomialRange.Serializer()).registerTypeAdapter(ConstantRange.class, new ConstantRange.Serializer()).registerTypeAdapter(IntClamper.class, new IntClamper.Serializer()).registerTypeAdapter(LootPool.class, new LootPool.Serializer()).registerTypeAdapter(LootTable.class, new LootTable.Serializer()).registerTypeHierarchyAdapter(LootEntry.class, new LootEntryManager.Serializer()).registerTypeHierarchyAdapter(ILootFunction.class, new LootFunctionManager.Serializer()).registerTypeHierarchyAdapter(ILootCondition.class, new LootConditionManager.Serializer()).registerTypeHierarchyAdapter(LootContext.EntityTarget.class, new LootContext.EntityTarget.Serializer()).create();
    private Map<ResourceLocation, LootTable> field_186527_c = ImmutableMap.of();
+   public Map<LootTable, ResourceLocation> lootTableToKey = ImmutableMap.of(); // CraftBukkit
    private final LootPredicateManager field_227507_d_;
 
    public LootTableManager(LootPredicateManager p_i225887_1_) {
@@ -42,8 +43,9 @@
       }
 
       p_212853_1_.forEach((p_223385_1_, p_223385_2_) -> {
-         try {
-            LootTable loottable = field_186526_b.fromJson(p_223385_2_, LootTable.class);
+         try(net.minecraft.resources.IResource res = p_212853_2_.func_199002_a(getPreparedPath(p_223385_1_));)
+         {
+            LootTable loottable = net.minecraftforge.common.ForgeHooks.loadLootTable(field_186526_b, p_223385_1_, p_223385_2_, res == null || !res.func_199026_d().equals("Default"), this);
             builder.put(p_223385_1_, loottable);
          } catch (Exception exception) {
             field_186525_a.error("Couldn't parse loot table {}", p_223385_1_, exception);
@@ -60,6 +62,11 @@
          field_186525_a.warn("Found validation problem in " + p_215303_0_ + ": " + p_215303_1_);
       });
       this.field_186527_c = immutablemap;
+      // CraftBukkit start - build a reversed registry map
+      ImmutableMap.Builder<LootTable, ResourceLocation> lootTableToKeyBuilder = ImmutableMap.builder();
+      this.field_186527_c.forEach((lootTable, key) -> lootTableToKeyBuilder.put(key, lootTable));
+      this.lootTableToKey = lootTableToKeyBuilder.build();
+      // CraftBukkit end
    }
 
    public static void func_227508_a_(ValidationTracker p_227508_0_, ResourceLocation p_227508_1_, LootTable p_227508_2_) {
